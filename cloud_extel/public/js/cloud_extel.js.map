{"version":3,"file":"cloud_extel.js","sources":["../../../../apps/cloud_extel/cloud_extel/public/js/dimension_filter.js","../../../../apps/cloud_extel/cloud_extel/public/js/project_treeview.js"],"sourcesContent":["\nlet doctypes_with_dimensions = [\"GL Entry\", \"Sales Invoice\", \"Purchase Invoice\", \"Payment Entry\", \"Asset\",\n\"Expense Claim\", \"Stock Entry\", \"Budget\", \"Payroll Entry\", \"Delivery Note\", \"Shipping Rule\", \"Loyalty Program\",\n\"Fee Schedule\", \"Fee Structure\", \"Stock Reconciliation\", \"Travel Request\", \"Fees\", \"POS Profile\", \"Opening Invoice Creation Tool\",\n\"Subscription\", \"Purchase Order\", \"Journal Entry\", \"Material Request\", \"Purchase Receipt\", \"Landed Cost Item\", \"Asset\"];\n\n\ndoctypes_with_dimensions.forEach((doctype) => {\n\tfrappe.ui.form.on(doctype, {\n\t\tcost_center: function(frm) {\n\t\t\tfrappe.call({\n\t\t\t\t'method': 'frappe.client.get_list',\n\t\t\t\t'args': {\n\t\t\t\t\t'filters':{\n\t\t\t\t\t\t'business_segment': frm.doc.cost_center},\n\t\t\t\t\t\t'doctype': 'Business Segment',\n\t\t\t\t\t\t'fields': ['parent'],\n\t\t\t\t\t\t'parent': 'Telecom Region',\n\t\t\t\t\t\t'limit_page_length': 300\n\t\t\t\t\t},\n\t\t\t\t'callback': function(r) {\n\t\t\t\t\tfrm.set_query('telecom_region', function() {\n\t\t\t\t\t\tlet region_list = r.message;\n\t\t\t\t\t\tregion_list = region_list.map(pt => pt.parent);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\t\t'name': ['in', region_list]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t});\n});","frappe.provide('frappe.views');\nfrappe.provide(\"erpnext.projects\");\n\nerpnext.projects.ProjectTree = class Projects extends frappe.views.BaseList {\n\tconstructor(opts) {\n\t\tsuper(opts);\n\t\tthis.show();\n\t\twindow.cur_list = this;\n\t\tthis.hide_sort_selector = true;\n\t\tthis.view_name = 'List';\n\t}\n\n\tsetup_defaults() {\n\t\tsuper.setup_defaults();\n\n\t\tthis.task_meta = frappe.get_meta(\"Task\");\n\n\t\tthis.task_fields = [];\n\t\tthis.task_columns = [];\n\t\tthis.get_settings(\"Project\", \"project_listview_settings\");\n\t\tthis.get_settings(\"Task\", \"task_listview_settings\");\n\n\t\tthis.menu_items = [];\n\t}\n\n\tsetup_page() {\n\t\tthis.$page = $(this.parent);\n\t\tthis.page && this.page.page_form.removeClass('row').addClass('flex');\n\t\tthis.page && this.page.body.addClass('frappe-card');\n\t\tthis.setup_page_head();\n\t}\n\n\tsetup_page_head() {\n\t\tthis.set_title(\"Projects\");\n\t\tthis.set_menu_items(\"Project\");\n\t\tthis.set_breadcrumbs();\n\t}\n\n\tset_menu_items(doctype) {\n\n\t\tconst bulk_delete = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __('Delete'),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true).map(docname => docname.toString());\n\t\t\t\t\tfrappe.confirm(__('Delete {0} items permanently?', [docnames.length]),\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\t\t\tmethod: 'frappe.desk.reportview.delete_items',\n\t\t\t\t\t\t\t\tfreeze: true,\n\t\t\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\t\t\titems: docnames,\n\t\t\t\t\t\t\t\t\tdoctype: doctype\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}).then((r) => {\n\t\t\t\t\t\t\t\tlet failed = r.message;\n\t\t\t\t\t\t\t\tif (!failed) failed = [];\n\n\t\t\t\t\t\t\t\tif (failed.length && !r._server_messages) {\n\t\t\t\t\t\t\t\t\tfrappe.throw(__('Cannot delete {0}', [failed.map(f => f.bold()).join(', ')]));\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (failed.length < docnames.length) {\n\t\t\t\t\t\t\t\t\tfrappe.utils.play_sound('delete');\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\t// if (frappe.user.has_role('System Manager')) {\n\t\t// \tthis.menu_items.push({\n\t\t// \t\tlabel: __('Project Settings'),\n\t\t// \t\taction: () => this.show_list_settings(\"Project\", this.listview_settings),\n\t\t// \t\tstandard: true\n\t\t// \t});\n\n\t\t// \tthis.menu_items.push({\n\t\t// \t\tlabel: __('Task Settings'),\n\t\t// \t\taction: () => this.show_list_settings(\"Task\", this.task_listview_settings),\n\t\t// \t\tstandard: true\n\t\t// \t});\n\t\t// }\n\n\t\t// bulk delete\n\t\tif (frappe.model.can_delete(doctype)) {\n\t\t\tthis.menu_items.push(bulk_delete());\n\t\t}\n\n\t\tthis.page && this.menu_items.map(item => {\n\t\t\tconst $item = this.page.add_menu_item(item.label, item.action, item.standard, item.shortcut);\n\t\t\tif (item.class) {\n\t\t\t\t$item && $item.addClass(item.class);\n\t\t\t}\n\t\t});\n\t}\n\n\t// show_list_settings(doctype, settings) {\n\t// \tfrappe.model.with_doctype(doctype, () => {\n\t// \t\tnew frappe.views.ListSettings({\n\t// \t\t\tlistview: this,\n\t// \t\t\tdoctype: doctype,\n\t// \t\t\tsettings: settings,\n\t// \t\t\tmeta: frappe.get_meta(doctype)\n\t// \t\t});\n\t// \t});\n\t// }\n\n\trefresh_columns() {\n\t\tthis.show();\n\t}\n\n\tset_title(title) {\n\t\tthis.page && this.page.set_title(title);\n\t}\n\n\tsetup_view() {\n\t\tthis.columns = this.setup_columns(\"Project\", this.meta, this.project_listview_settings);\n\t\tthis.task_columns = this.setup_columns(\"Task\", this.task_meta, this.task_listview_settings);\n\n\t\tthis.render_header(this.columns);\n\t\tthis.render_skeleton();\n\t\tthis.setup_events();\n\t}\n\n\tsetup_fields() {\n\t\tsuper.setup_fields();\n\n\t\tthis.set_task_fields();\n\t\tthis.build_task_fields();\n\t}\n\n\tset_task_fields() {\n\t\tlet fields = [].concat(\n\t\t\tfrappe.model.std_fields_list,\n\t\t\tthis.get_fields_in_list_view(\"Task\", this.task_meta),\n\t\t\t[this.meta.title_field, this.meta.image_field],\n\t\t\t(this.settings.add_fields || []),\n\t\t\tthis.meta.track_seen ? '_seen' : null,\n\t\t\tthis.sort_by,\n\t\t\t'enabled',\n\t\t\t'disabled',\n\t\t\t'color'\n\t\t);\n\n\t\tfields.forEach(f => this._add_task_field(f));\n\n\t\tthis.task_fields.forEach(f => {\n\t\t\tconst df = frappe.meta.get_docfield(f[1], f[0]);\n\t\t\tif (df && df.fieldtype === 'Currency' && df.options && !df.options.includes(':')) {\n\t\t\t\tthis._add_field(df.options);\n\t\t\t}\n\t\t});\n\t}\n\n\tbuild_task_fields() {\n\t\t// fill in missing doctype\n\t\tthis.task_fields = this.task_fields.map(f => {\n\t\t\tif (typeof f === 'string') {\n\t\t\t\tf = [f, this.doctype];\n\t\t\t}\n\t\t\treturn f;\n\t\t});\n\t\t// remove null or undefined values\n\t\tthis.task_fields = this.task_fields.filter(Boolean);\n\t\t// de-duplicate\n\t\tthis.task_fields = this.task_fields.uniqBy(f => f[0] + f[1]);\n\t}\n\n\t_add_task_field(fieldname) {\n\t\tif (!fieldname) return;\n\t\tlet doctype = \"Task\";\n\n\t\tif (typeof fieldname === 'object') {\n\t\t\t// df is passed\n\t\t\tconst df = fieldname;\n\t\t\tfieldname = df.fieldname;\n\t\t\tdoctype = df.parent;\n\t\t}\n\n\t\tconst is_valid_field = frappe.model.std_fields_list.includes(fieldname)\n\t\t\t|| frappe.meta.has_field(doctype, fieldname)\n\t\t\t|| fieldname === '_seen';\n\n\t\tif (!is_valid_field) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.task_fields.push([fieldname, doctype]);\n\t}\n\n\tget_df(doctype, fieldname) {\n\t\treturn frappe.meta.get_docfield(doctype, fieldname);\n\t}\n\n\tsetup_columns(doctype, meta, list_view_settings) {\n\t\t// setup columns for list view\n\t\tlet columns = [];\n\n\t\t// 1st column: title_field or name\n\t\tif (meta.title_field) {\n\t\t\tcolumns.push({\n\t\t\t\ttype: 'Subject',\n\t\t\t\tdf: this.get_df(doctype, meta.title_field)\n\t\t\t});\n\t\t} else {\n\t\t\tcolumns.push({\n\t\t\t\ttype: 'Subject',\n\t\t\t\tdf: {\n\t\t\t\t\tlabel: __('Name'),\n\t\t\t\t\tfieldname: 'name'\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// 2nd column: Status indicator\n\t\tif (frappe.has_indicator(doctype)) {\n\t\t\t// indicator\n\t\t\tcolumns.push({\n\t\t\t\ttype: 'Status'\n\t\t\t});\n\t\t}\n\n\t\tconst fields_in_list_view = this.get_fields_in_list_view(doctype, meta);\n\t\t// Add rest from in_list_view docfields\n\t\tcolumns = columns.concat(\n\t\t\tfields_in_list_view\n\t\t\t\t.filter(df => {\n\t\t\t\t\tif (frappe.has_indicator(doctype) && df.fieldname === 'status') {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (!df.in_list_view) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn df.fieldname !== meta.title_field;\n\t\t\t\t})\n\t\t\t\t.map(df => ({\n\t\t\t\t\ttype: 'Field',\n\t\t\t\t\tdf\n\t\t\t\t}))\n\t\t);\n\n\t\tif (list_view_settings && list_view_settings.fields) {\n\t\t\tcolumns = this.reorder_listview_fields(columns, list_view_settings.fields);\n\t\t}\n\n\t\t// limit max to 8 columns if no total_fields is set in List View Settings\n\t\t// Screen with low density no of columns 4\n\t\t// Screen with medium density no of columns 6\n\t\t// Screen with high density no of columns 8\n\t\tlet total_fields = 6;\n\n\t\tif (window.innerWidth <= 1366) {\n\t\t\ttotal_fields = 4;\n\t\t} else if (window.innerWidth >= 1920) {\n\t\t\ttotal_fields = 8;\n\t\t}\n\n\t\tif (list_view_settings && list_view_settings.total_fields) {\n\t\t\ttotal_fields = parseInt(list_view_settings.total_fields);\n\t\t}\n\n\t\treturn columns.slice(0, total_fields);\n\t}\n\n\treorder_listview_fields(columns, fields) {\n\t\tlet fields_order = [];\n\t\tfields = JSON.parse(fields);\n\n\t\t// title_field is fixed\n\t\tfields_order.push(columns[0]);\n\t\tcolumns.splice(0, 1);\n\n\t\tfor (let fld in fields) {\n\t\t\tfor (let col in columns) {\n\t\t\t\tlet field = fields[fld];\n\t\t\t\tlet column =columns[col];\n\n\t\t\t\tif (column.type == \"Status\" && field.fieldname == \"status_field\") {\n\t\t\t\t\tfields_order.push(column);\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (column.type == \"Field\" && field.fieldname === column.df.fieldname) {\n\t\t\t\t\tfields_order.push(column);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fields_order;\n\t}\n\n\tget_fields_in_list_view(doctype, meta) {\n\t\treturn meta.fields.filter(df => {\n\t\t\treturn frappe.model.is_value_type(df.fieldtype) && (\n\t\t\t\tdf.in_list_view\n\t\t\t\t&& frappe.perm.has_perm(doctype, df.permlevel, 'read')\n\t\t\t) || (\n\t\t\t\tdf.fieldtype === 'Currency'\n\t\t\t\t&& df.options\n\t\t\t\t&& !df.options.includes(':')\n\t\t\t) || (\n\t\t\t\tdf.fieldname === 'status'\n\t\t\t);\n\t\t});\n\t}\n\n\trender_skeleton() {\n\t\tconst $row = this.get_list_row_html_skeleton('<div><input type=\"checkbox\" /></div>');\n\t\tthis.$result.append($row);\n\t}\n\n\tset_fields() {\n\t\tlet fields = [].concat(\n\t\t\tfrappe.model.std_fields_list,\n\t\t\tthis.get_fields_in_list_view(\"Project\", this.meta),\n\t\t\t[this.meta.title_field, this.meta.image_field],\n\t\t\t(this.settings.add_fields || []),\n\t\t\tthis.meta.track_seen ? '_seen' : null,\n\t\t\tthis.sort_by,\n\t\t\t'enabled',\n\t\t\t'disabled',\n\t\t\t'color'\n\t\t);\n\n\t\tfields.forEach(f => this._add_field(f));\n\n\t\tthis.fields.forEach(f => {\n\t\t\tconst df = frappe.meta.get_docfield(f[1], f[0]);\n\t\t\tif (df && df.fieldtype === 'Currency' && df.options && !df.options.includes(':')) {\n\t\t\t\tthis._add_field(df.options);\n\t\t\t}\n\t\t});\n\t}\n\n\tget_task_fields() {\n\t\t// convert [fieldname, Doctype] => tabDoctype.fieldname\n\t\treturn this.task_fields.map(f => frappe.model.get_full_column_name(f[0], f[1]));\n\t}\n\n\tget_call_args(filters) {\n\t\treturn {\n\t\t\tmethod: \"cloud_extel.cloud_extel.page.project_treeview.project_treeview.get_projects_data\",\n\t\t\targs: {\n\t\t\t\tparams: {\n\t\t\t\t\tdoctype: \"Project\",\n\t\t\t\t\tfields: this.get_fields(),\n\t\t\t\t\tfilters: filters || this.get_filters_for_args(),\n\t\t\t\t\twith_comment_count: true,\n\t\t\t\t\tpage_length: this.page_length,\n\t\t\t\t\tstart: this.start\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tget_task_call_args(filters) {\n\t\treturn {\n\t\t\tmethod: \"cloud_extel.cloud_extel.page.project_treeview.project_treeview.get_tasks\",\n\t\t\targs: {\n\t\t\t\tparams: {\n\t\t\t\t\tdoctype: \"Task\",\n\t\t\t\t\tfields: this.get_task_fields(),\n\t\t\t\t\tfilters: filters,\n\t\t\t\t\twith_comment_count: true,\n\t\t\t\t\tpage_length: this.page_length,\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tsetup_side_bar() {}\n\n\tget_settings(doctype, attr) {\n\t\treturn frappe.call({\n\t\t\tmethod: \"frappe.desk.listview.get_list_settings\",\n\t\t\targs: {\n\t\t\t\tdoctype: doctype\n\t\t\t},\n\t\t\tasync: false\n\t\t}).then(doc => this[attr] = doc.message || {});\n\t}\n\n\tsetup_events() {\n\t\tthis.get_tasks();\n\t\tthis.setup_check_events();\n\t\tthis.setup_open_doc();\n\t\tthis.setup_task_tree_dropdown();\n\t\tthis.setup_create_new_task();\n\t\tthis.get_projects();\n\t\tthis.setup_expand_all_rows();\n\t\tthis.setup_collapse_all_rows();\n\t}\n\n\tsetup_task_tree_dropdown() {\n\t\tthis.$result.on('click', 'svg.icon', (e) => {\n\t\t\tlet el = e.currentTarget;\n\t\t\tlet $el = $(el);\n\t\t\t$el.find(\"use.mb-1\").attr(\"href\", \"#icon-down\");\n\n\t\t\tlet target = unescape(el.getAttribute(\"data-name\"));\n\t\t\tthis.render_task(target, $el);\n\t\t});\n\t}\n\n\trender_task(task, $el, expand_all) {\n\t\tlet $row = this.$result.find(`.list-rows[data-name=\"${task}\"]`);\n\t\tif (!$row || (!$row.length)) return;\n\n\t\tif (!$el) {\n\t\t\t$el = $row.find(\"use.mb-1\").attr(\"href\", \"#icon-down\");\n\t\t}\n\n\t\tlet list = $row.find(`.nested-list-row-container`);\n\t\tlet $list = $(list);\n\t\tlet level = parseInt($row[0].getAttribute(\"data-level\")) + 1;\n\t\tlet $result = $(`<div class=\"nested-result\">`);\n\n\t\t$list.toggleClass(\"hide\");\n\n\t\tif ($list[0].classList.contains(\"hide\")) {\n\t\t\t$list.find(`.nested-result`).remove();\n\t\t\t$el.find(\"use.mb-1\").attr(\"href\", \"#icon-right\");\n\t\t}\n\n\t\tfrappe.call(this.get_task_call_args([[\"Task\", \"parent_task\", \"=\", task]])).then(r => {\n\t\t\t// render\n\t\t\tthis.prepare_data(r);\n\n\t\t\tlist.append($result);\n\t\t\tthis.data.map((doc, i) => {\n\t\t\t\tdoc._idx = i;\n\t\t\t\tdoc.doctype = 'Task';\n\t\t\t\t$result.append(this.get_task_list_row_html(doc, level));\n\t\t\t});\n\n\t\t\tif (expand_all) {\n\t\t\t\tthis.$result.find(\".expand-all\").click();\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_open_doc() {\n\t\tthis.$result.on('click', '.btn-open', (e) => {\n\t\t\te.stopPropagation();\n\t\t\tlet el = e.currentTarget;\n\t\t\tlet doctype = unescape(el.getAttribute(\"data-doctype\"));\n\t\t\tlet name = unescape(el.getAttribute(\"data-name\"));\n\t\t\tfrappe.set_route(\"Form\", doctype, name);\n\t\t});\n\t}\n\n\tsetup_create_new_task() {\n\t\tthis.$result.on('click', '.create-new', (e) => {\n\t\t\tlet parent = unescape(e.currentTarget.getAttribute(\"data-name\"));\n\t\t\tlet project = unescape(e.currentTarget.getAttribute(\"data-project\"));\n\t\t\tlet task = frappe.model.get_new_doc(\"Task\");\n\t\t\ttask[\"project\"] = project;\n\t\t\ttask[\"parent_task\"] = parent;\n\n\t\t\tfrappe.ui.form.make_quick_entry(\"Task\", null, null, task);\n\t\t});\n\t}\n\n\tget_projects() {\n\t\tthis.$frappe_list.on('click', '.btn-prev', () => {\n\t\t\tthis.filter_area.clear(false);\n\t\t\tthis.set_title(\"Project\");\n\t\t\tthis.remove_previous_button();\n\t\t\tthis.render_header(this.columns, true);\n\t\t\tthis.filter_area.refresh_filters(this.meta);\n\t\t\tthis.fetch_projects();\n\t\t});\n\t}\n\n\tfetch_projects() {\n\t\tfrappe.call(this.get_call_args([])).then(r => {\n\t\t\t// render\n\t\t\tthis.render_header(this.columns, true);\n\t\t\tthis.prepare_data(r);\n\t\t\tthis.toggle_result_area();\n\t\t\tthis.render();\n\t\t});\n\t}\n\n\tget_tasks() {\n\t\tthis.$result.on('click', '.project-list-row-container', (e) => {\n\t\t\tthis.filter_area.clear(false);\n\t\t\tthis.set_title(\"Task Tree\");\n\t\t\tthis.filter_area.refresh_filters(this.task_meta);\n\t\t\tthis.fetch_tasks(unescape(e.currentTarget.getAttribute(\"data-name\")));\n\t\t});\n\t}\n\n\tfetch_tasks(project) {\n\t\tif (project) {\n\t\t\tthis.filter_area.add([[\"Task\", \"project\", \"=\", project]], false);\n\t\t}\n\n\t\tlet filters = this.get_filters_for_args();\n\t\tfilters.push([\"Task\", \"parent_task\", \"=\", '']);\n\n\t\tfrappe.call(this.get_task_call_args(filters)).then(r => {\n\t\t\t// render\n\t\t\tthis.render_header(this.task_columns, true);\n\t\t\tthis.prepare_data(r);\n\n\t\t\tthis.render(\"Task\", true, project);\n\t\t\tthis.render_previous_button();\n\t\t});\n\t}\n\n\tsetup_expand_all_rows() {\n\t\tthis.$result.on('click', '.expand-all', () => {\n\t\t\tlet task_list = this.$result.find(\"use[href='#icon-right']\").parent();\n\t\t\tthis.toggle_expand_collapse_button('expand');\n\n\t\t\tif (!task_list) return\n\t\t\ttask_list.map((i, task) => {\n\t\t\t\tlet task_name = task.getAttribute(\"data-name\");\n\t\t\t\tif (task_name) {\n\t\t\t\t\tthis.render_task(task_name, null, true);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tsetup_collapse_all_rows() {\n\t\tthis.$result.on('click', '.collapse-all', () => {\n\t\t\tlet task_list = this.$result.find(\"use[href='#icon-down']\").parent();\n\t\t\tthis.toggle_expand_collapse_button('collapse');\n\n\t\t\tif (!task_list) return\n\t\t\ttask_list.map((i, task) => {\n\t\t\t\tlet task_name = task.getAttribute(\"data-name\")\n\t\t\t\tlet $row = this.$result.find(`.list-rows[data-name=\"${task_name}\"]`);\n\t\t\t\tlet list = $row.find(`.nested-list-row-container`);\n\t\t\t\tlet $list = $(list);\n\t\t\t\t$list.toggleClass(\"hide\");\n\n\t\t\t\tif ($list.length && $list[0].classList.contains(\"hide\")) {\n\t\t\t\t\t$list.find(`.nested-result`).remove();\n\t\t\t\t\t$row.find(\"use.mb-1\").attr(\"href\", \"#icon-right\")\n\t\t\t\t}\n\t\t\t});\n\n\t\t});\n\t}\n\n\ttoggle_expand_collapse_button(action) {\n\t\tlet hide = (action == 'expand') ? '.expand-all': '.collapse-all';\n\t\tlet show = (action == 'expand') ? '.collapse-all': '.expand-all';\n\n\t\tthis.$result.find(hide).hide();\n\t\tthis.$result.find(show).show();\n\t}\n\n\trender(doctype, is_task=false, project=null) {\n\t\t// clear rows\n\t\tthis.$result.find('.list-row-container').remove();\n\t\tif (this.data.length > 0) {\n\t\t\t// append rows\n\t\t\tthis.$result.append(\n\t\t\t\tthis.data.map((doc, i) => {\n\t\t\t\t\tdoc._idx = i;\n\t\t\t\t\tdoc.doctype = doctype || this.doctype;\n\n\t\t\t\t\tif (is_task && project) {\n\t\t\t\t\t\tdoc.project = project;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn is_task ? this.get_task_list_row_html(doc, 0) : this.get_list_row_html(doc);\n\t\t\t\t}).join('')\n\t\t\t);\n\t\t}\n\t}\n\n\tsetup_no_result_area() {\n\t\tthis.$no_result = $(`\n\t\t\t<div class=\"no-result text-muted flex justify-center align-center\">\n\t\t\t\t${this.get_no_result_message()}\n\t\t\t</div>\n\t\t`).hide();\n\t\tthis.$no_result_prev = $(this.get_previous_header_html()).hide();\n\n\t\tthis.$frappe_list.append(this.$no_result_prev);\n\t\tthis.$frappe_list.append(this.$no_result);\n\t}\n\n\ttoggle_result_area() {\n\t\tthis.$result.toggle(this.data.length > 0);\n\t\tthis.$paging_area.toggle(this.data.length > 0);\n\t\tthis.$no_result.toggle(this.data.length == 0);\n\t\tthis.$no_result_prev.toggle(this.data.length == 0);\n\n\t\tconst show_more = (this.start + this.page_length) <= this.data.length;\n\t\tthis.$paging_area.find('.btn-more')\n\t\t\t.toggle(show_more);\n\t}\n\n\tsetup_filter_area() {\n\t\tthis.filter_area = new erpnext.projects.CustomFilterArea(this);\n\n\t\tif (this.filters && this.filters.length > 0) {\n\t\t\treturn this.filter_area.set(this.filters);\n\t\t}\n\t}\n\n\tget_list_row_html(doc) {\n\t\treturn this.get_list_row_html_skeleton(this.get_left_html(this.columns, doc), this.get_right_html(doc), doc);\n\t}\n\n\tget_task_list_row_html(doc, level) {\n\t\treturn this.get_task_list_row_html_skeleton(this.get_left_html(this.task_columns, doc, level), this.get_right_html(doc, true), doc, level);\n\t}\n\n\tget_list_row_html_skeleton(left = '', right = '', doc = {}) {\n\t\treturn `\n\t\t\t<div class=\"list-row-container project-list-row-container\" tabindex=\"1\" data-doctype=\"Project\" data-name=\"${escape(doc.name)}\">\n\t\t\t\t<div class=\"level list-row small\">\n\t\t\t\t\t<div class=\"level-left ellipsis\">\n\t\t\t\t\t\t${left}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"level-right text-muted ellipsis\">\n\t\t\t\t\t\t${right}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_task_list_row_html_skeleton(left = '', right = '', doc = {}, level) {\n\t\treturn `\n\t\t<div class=\"list-rows\" data-doctype=\"Task\" data-name=\"${escape(doc.name)}\" data-level=\"${level}\">\n\t\t\t<div class=\"list-row-container\" tabindex=\"1\">\n\t\t\t\t<div class=\"level list-row small\">\n\t\t\t\t\t<div class=\"level-left ellipsis\">\n\t\t\t\t\t\t${left}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"level-right text-muted ellipsis\">\n\t\t\t\t\t\t${right}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"nested-list-row-container hide\">\n\t\t\t</div>\n\t\t</div>\n\t\t`;\n\t}\n\n\tget_left_html(columns, doc, level) {\n\t\treturn columns.map(col => this.get_column_html(col, columns, doc, level)).join('');\n\t}\n\n\tget_right_html(doc, create_new=false) {\n\t\treturn this.get_meta_html(doc, create_new);\n\t}\n\n\tget_column_html(col, columns, doc, level) {\n\t\tif (col.type === 'Status') {\n\t\t\treturn `\n\t\t\t\t<div class=\"list-row-col hidden-xs ellipsis\">\n\t\t\t\t\t${this.get_indicator_html(doc)}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\tconst df = col.df || {};\n\t\tconst label = df.label;\n\t\tconst fieldname = df.fieldname;\n\t\tconst value = doc[fieldname] || '';\n\n\t\tconst format = () => {\n\t\t\tif (df.fieldtype === 'Code') {\n\t\t\t\treturn value;\n\t\t\t} else if (df.fieldtype === 'Percent') {\n\t\t\t\treturn `<div class=\"progress level\" style=\"margin: 0px;\">\n\t\t\t\t\t\t<div class=\"progress-bar progress-bar-success\" role=\"progressbar\"\n\t\t\t\t\t\t\taria-valuenow=\"${value}\"\n\t\t\t\t\t\t\taria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: ${Math.round(value)}%;\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>`;\n\t\t\t} else {\n\t\t\t\treturn frappe.format(value, df, null, doc);\n\t\t\t}\n\t\t};\n\n\t\tconst field_html = () => {\n\t\t\tlet html;\n\t\t\tlet _value;\n\t\t\t// listview_setting formatter\n\t\t\tif (this.settings.formatters && this.settings.formatters[fieldname]) {\n\t\t\t\t_value = this.settings.formatters[fieldname](value, df, doc);\n\t\t\t} else {\n\t\t\t\tlet strip_html_required = df.fieldtype == 'Text Editor'\n\t\t\t\t\t|| (df.fetch_from && ['Text', 'Small Text'].includes(df.fieldtype));\n\t\t\t\tif (strip_html_required) {\n\t\t\t\t\t_value = strip_html(value);\n\t\t\t\t} else {\n\t\t\t\t\t_value = typeof value === 'string' ? frappe.utils.escape_html(value) : value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (df.fieldtype === 'Image') {\n\t\t\t\thtml = df.options ?\n\t\t\t\t\t`<img src=\"${doc[df.options]}\" style=\"max-level: 30px; max-width: 100%;\">` :\n\t\t\t\t\t`<div class=\"missing-image small\">\n\t\t\t\t\t\t<span class=\"octicon octicon-circle-slash\"></span>\n\t\t\t\t\t</div>`;\n\t\t\t} else if (df.fieldtype === 'Select') {\n\t\t\t\thtml = `<span class=\"filterable indicator ${frappe.utils.guess_colour(_value)} ellipsis\"\n\t\t\t\t\tdata-filter=\"${fieldname},=,${value}\">\n\t\t\t\t\t${__(_value)}\n\t\t\t\t</span>`;\n\t\t\t} else if (df.fieldtype === 'Link') {\n\t\t\t\thtml = `<a class=\"filterable text-muted ellipsis\"\n\t\t\t\t\tdata-filter=\"${fieldname},=,${value}\">\n\t\t\t\t\t${_value}\n\t\t\t\t</a>`;\n\t\t\t} else if (['Text Editor', 'Text', 'Small Text', 'HTML Editor'].includes(df.fieldtype)) {\n\t\t\t\thtml = `<span class=\"text-muted ellipsis\">\n\t\t\t\t\t${_value}\n\t\t\t\t</span>`;\n\t\t\t} else {\n\t\t\t\thtml = `<a class=\"filterable text-muted ellipsis\"\n\t\t\t\t\tdata-filter=\"${fieldname},=,${value}\">\n\t\t\t\t\t${format()}\n\t\t\t\t</a>`;\n\t\t\t}\n\n\t\t\treturn `<span class=\"ellipsis\"\n\t\t\t\ttitle=\"${__(label)}: ${escape(_value)}\">\n\t\t\t\t${html}\n\t\t\t</span>`;\n\t\t};\n\n\t\tconst class_map = {\n\t\t\tSubject: 'list-subject level',\n\t\t\tField: 'hidden-xs'\n\t\t};\n\t\tconst css_class = [\n\t\t\t'list-row-col ellipsis',\n\t\t\tclass_map[col.type],\n\t\t\tfrappe.model.is_numeric_field(df) ? 'text-right' : ''\n\t\t].join(' ');\n\n\t\tconst html_map = {\n\t\t\tSubject: this.get_subject_html(columns, doc, level),\n\t\t\tField: field_html()\n\t\t};\n\t\tconst column_html = html_map[col.type];\n\n\t\treturn `\n\t\t\t<div class=\"${css_class}\">\n\t\t\t\t${column_html}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_subject_html(columns, doc, level) {\n\t\tlet user = frappe.session.user;\n\t\tlet subject_field = columns[0].df;\n\t\tlet value = doc[subject_field.fieldname] || doc.name;\n\t\tlet subject = strip_html(value.toString());\n\t\tlet escaped_subject = frappe.utils.escape_html(subject);\n\n\t\tconst seen = JSON.parse(doc._seen || '[]').includes(user) ? '' : 'bold';\n\n\t\tconst subject_link = this.get_subject_link(doc, subject, escaped_subject);\n\n\t\t// let html = doc.doctype == 'Task' && doc.expandable ? `<a class=\"btn btn-action btn-xs\"\n\t\t// \tdata-doctype=\"Task\" data-name=\"${escape(doc.name)}\" style=\"width: 20px;\">\n\t\t// \t\t<i class=\"octicon octicon-chevron-right\" />\n\t\t// \t</a>` : ``;\n\n\t\tlet html = doc.doctype == 'Task' && doc.expandable ? `<svg class=\"icon icon-sm\" style=\"\"\n\t\t\tdata-doctype=\"Task\" data-name=\"${escape(doc.name)}\">\n\t\t\t\t<use class=\"mb-1\" href=\"#icon-right\"></use>\n\t\t\t</svg>` : ``;\n\n\t\tlet subject_html = `\n\t\t\t<span class=\"level-item select-like\">\n\t\t\t\t<input class=\"list-row-checkbox\" type=\"checkbox\" data-name=\"${escape(doc.name)}\">\n\t\t\t\t<span class=\"list-row-like hidden-xs style=\"margin-bottom: 1px;\">\n\t\t\t\t\t${this.get_like_html(doc)}\n\t\t\t\t</span>\n\t\t\t</span>\n\t\t\t<span class=\"level-item ${seen} ellipsis\" title=\"${escaped_subject}\" style=\"padding-left: ${20*level}px;\">\n\t\t\t\t<span class=\"level-item\" style=\"margin-bottom: 1px;\"\">\n\t\t\t\t\t${html}\n\t\t\t\t</span>\n\t\t\t\t${subject_link}\n\t\t\t</span>\n\t\t`;\n\n\t\treturn subject_html;\n\t}\n\n\tget_like_html(doc) {\n\t\tconst liked_by = JSON.parse(doc._liked_by || \"[]\");\n\t\tlet heart_class = liked_by.includes(frappe.session.user)\n\t\t\t? \"liked-by liked\"\n\t\t\t: \"not-liked\";\n\n\t\treturn `<span\n\t\t\tclass=\"like-action ${heart_class}\"\n\t\t\tdata-name=\"${doc.name}\" data-doctype=\"${this.doctype}\"\n\t\t\tdata-liked-by=\"${encodeURI(doc._liked_by) || \"[]\"}\"\n\t\t\ttitle=\"${liked_by.map(u => frappe.user_info(u).fullname).join(', ')}\">\n\t\t\t${frappe.utils.icon('heart', 'sm', 'like-icon')}\n\t\t</span>\n\t\t<span class=\"likes-count\">\n\t\t\t${liked_by.length > 99 ? __(\"99\") + \"+\" : __(liked_by.length || \"\")}\n\t\t</span>`;\n\t}\n\n\tget_subject_link(doc, subject, escaped_subject) {\n\t\tif (doc.doctype === 'Project') {\n\t\t\treturn `<span class=\"ellipsis\" title=\"${escaped_subject}\" data-doctype=\"${doc.doctype}\" data-name=\"${doc.name}\">\n\t\t\t\t${subject}\n\t\t\t</span>`;\n\t\t} else {\n\t\t\treturn `<a href =\"/app/task/${doc.name}\" class=\"ellipsis\" title=\"${escaped_subject}\" data-doctype=\"${doc.doctype}\" data-name=\"${doc.name}\">\n\t\t\t\t${subject}\n\t\t\t</a>`;\n\t\t}\n\t}\n\n\tget_indicator_html(doc) {\n\t\tconst indicator = frappe.get_indicator(doc, this.doctype);\n\t\tif (indicator) {\n\t\t\treturn `<span class=\"indicator ${indicator[1]} filterable\"\n\t\t\t\tdata-filter='${indicator[2]}'>\n\t\t\t\t${__(indicator[0])}\n\t\t\t<span>`;\n\t\t}\n\t\treturn '';\n\t}\n\n\tget_indicator_dot(doc) {\n\t\tconst indicator = frappe.get_indicator(doc, this.doctype);\n\t\tif (!indicator) return '';\n\t\treturn `<span class='indicator ${indicator[1]}' title='${__(indicator[0])}'></span>`;\n\t}\n\n\tget_avatar(last_assignee) {\n\t\treturn `<span class=\"filterable\"\n\t\t\t\tdata-filter=\"_assign,like,%${last_assignee}%\">\n\t\t\t\t${frappe.avatar(last_assignee)}\n\t\t\t</span>`\n\t}\n\n\tget_meta_html(doc, create_new) {\n\t\tlet html = '';\n\n\t\tif (create_new && doc.is_group) {\n\t\t\thtml += this.get_add_child_button(doc);\n\t\t}\n\n\t\tif (doc.doctype == 'Project') {\n\t\t\thtml += this.get_open_button(doc);\n\t\t}\n\n\t\tconst modified = this.comment_when(doc.modified, true);\n\n\t\tconst last_assignee = JSON.parse(doc._assign || '[]').slice(-1)[0];\n\t\tconst assigned_to = last_assignee ?\n\t\t\tthis.get_avatar(last_assignee) :\n\t\t\t`<span class=\"avatar avatar-small avatar-empty\"></span>`;\n\n\t\tconst comment_count =\n\t\t\t`<span class=\"${!doc._comment_count ? 'text-extra-muted' : ''} comment-count\">\n\t\t\t\t<i class=\"octicon octicon-comment-discussion\"></i>\n\t\t\t\t${doc._comment_count > 99 ? \"99+\" : doc._comment_count}\n\t\t\t</span>`;\n\n\t\thtml += `\n\t\t\t<div class=\"level-item hidden-xs list-row-activity\">\n\t\t\t\t${modified}\n\t\t\t\t${assigned_to}\n\t\t\t\t${comment_count}\n\t\t\t</div>\n\t\t\t<div class=\"level-item visible-xs text-right\">\n\t\t\t\t${this.get_indicator_dot(doc)}\n\t\t\t</div>\n\t\t`;\n\n\t\treturn html;\n\t}\n\n\tget_open_button(doc) {\n\t\treturn `\n\t\t\t\t<div class=\"level-item hidden-xs mr-3\">\n\t\t\t\t\t<button class=\"btn btn-open btn-default btn-xs\"\n\t\t\t\t\t\tdata-doctype=\"${escape(doc.doctype)}\" data-name=\"${escape(doc.name)}\">\n\t\t\t\t\t\t${__(\"Open\")}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t`;\n\t}\n\n\tget_add_child_button(doc) {\n\t\treturn `\n\t\t\t\t<div class=\"level-item hidden-xs mr-3\">\n\t\t\t\t\t<button class=\"btn create-new btn-default btn-xs\"\n\t\t\t\t\t\tdata-name=\"${escape(doc.name)}\" data-project=\"${escape(doc.project)}\">\n\t\t\t\t\t\t${__(\"Add Child\")}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t`;\n\t}\n\n\trender_header(columns, refresh_header) {\n\t\tif (refresh_header) {\n\t\t\tthis.$result.find('.list-row-head').remove();\n\t\t}\n\n\t\tif (this.$result.find('.list-row-head').length === 0) {\n\t\t\t// append header once\n\t\t\tthis.$result.prepend(this.get_header_html(columns));\n\t\t}\n\t}\n\n\trender_previous_button() {\n\t\tif (this.$result.find('.list-row-previous-head').length === 0) {\n\t\t\t// append header once\n\t\t\tthis.$result.prepend(this.get_previous_header_html());\n\t\t}\n\t}\n\n\tremove_previous_button() {\n\t\tthis.$result.find('.list-row-previous-head').remove();\n\t}\n\n\tget_header_html(columns) {\n\t\tconst subject_field = columns[0].df;\n\n\t\tlet subject_html = `\n\t\t\t<input class=\"level-item list-check-all hidden-xs\" type=\"checkbox\" title=\"${__(\"Select All\")}\">\n\t\t\t<span class=\"level-item list-liked-by-me\">\n\t\t\t\t<i class=\"octicon octicon-heart text-extra-muted\" title=\"${__(\"Likes\")}\"></i>\n\t\t\t</span>\n\t\t\t<span class=\"level-item\">${__(subject_field.label)}</span>\n\t\t`;\n\n\t\tconst $columns = columns.map(col => {\n\t\t\tlet classes = [\n\t\t\t\t'list-row-col ellipsis',\n\t\t\t\tcol.type == 'Subject' ? 'list-subject level' : 'hidden-xs',\n\t\t\t\tfrappe.model.is_numeric_field(col.df) ? 'text-right' : ''\n\t\t\t].join(' ');\n\n\t\t\treturn `\n\t\t\t\t<div class=\"${classes}\">\n\t\t\t\t\t${col.type === 'Subject' ? subject_html : `\n\t\t\t\t\t<span>${__(col.df && col.df.label || col.type)}</span>`}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}).join('');\n\n\t\treturn this.get_header_html_skeleton($columns, '<span class=\"list-count\"></span>');\n\t}\n\n\tget_previous_header_html() {\n\t\treturn `\n\t\t\t<header class=\"level list-row list-row-head text-muted small\">\n\t\t\t\t<a class=\"btn btn-prev btn-xs\" style=\"margin-left: 15px;\">\n\t\t\t\t\t<svg class=\"icon  icon-sm\" style=\"\">\n\t\t\t\t\t\t<use class=\"mb-1\" href=\"#icon-left\"></use>\n\t\t\t\t\t</svg>\n\t\t\t\t\t<span style=\"margin-left: 5px\">Projects</span>\n\t\t\t\t</a>\n\t\t\t\t<button class=\"btn btn-xs expand-all btn-default\" style=\"float: right\">\n\t\t\t\t\t${__('Expand All')}</button>\n\t\t\t\t<button class=\"btn btn-xs collapse-all btn-default\" style=\"float: right; display: none\">\n\t\t\t\t\t${__('Collapse All')}</button>\n\t\t\t</header>\n\t\t`;\n\t}\n\n\ton_row_checked() {\n\t\tthis.$list_head_subject = this.$list_head_subject || this.$result.find('header .list-header-subject');\n\t\tthis.$checkbox_actions = this.$checkbox_actions || this.$result.find('header .checkbox-actions');\n\n\t\tthis.$checks = this.$result.find('.list-row-checkbox:checked');\n\n\t\tthis.$list_head_subject.toggle(this.$checks.length === 0);\n\t\tthis.$checkbox_actions.toggle(this.$checks.length > 0);\n\n\t\tif (this.$checks.length === 0) {\n\t\t\tthis.$list_head_subject.find('.list-check-all').prop('checked', false);\n\t\t} else {\n\t\t\tthis.$checkbox_actions.find('.list-header-meta').html(\n\t\t\t\t__('{0} items selected', [this.$checks.length])\n\t\t\t);\n\t\t\tthis.$checkbox_actions.show();\n\t\t\tthis.$list_head_subject.hide();\n\t\t}\n\t}\n\n\tget_checked_items(only_docnames) {\n\t\tconst docnames = Array.from(this.$checks || [])\n\t\t\t.map(check => cstr(unescape($(check).data().name)));\n\n\t\tif (only_docnames) return docnames;\n\n\t\treturn this.data.filter(d => docnames.includes(d.name));\n\t}\n\n\tget_header_html_skeleton(left = '', right = '') {\n\t\treturn `\n\t\t\t<header class=\"level list-row list-row-head text-muted small\">\n\t\t\t\t<div class=\"level-left list-header-subject\">\n\t\t\t\t\t${left}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"level-left checkbox-actions\">\n\t\t\t\t\t<div class=\"level list-subject\">\n\t\t\t\t\t\t<input class=\"level-item list-check-all hidden-xs\" type=\"checkbox\" title=\"${__(\"Select All\")}\">\n\t\t\t\t\t\t<span class=\"level-item list-header-meta\"></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"level-right\">\n\t\t\t\t\t${right}\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t`;\n\t}\n\n\tsetup_check_events() {\n\t\tthis.$result.on('change', 'input[type=checkbox]', e => {\n\t\t\tconst $target = $(e.currentTarget);\n\t\t\te.stopPropagation();\n\n\t\t\tif ($target.is('.list-header-subject .list-check-all')) {\n\t\t\t\tconst $check = this.$result.find('.checkbox-actions .list-check-all');\n\t\t\t\t$check.prop('checked', $target.prop('checked'));\n\t\t\t\t$check.trigger('change');\n\t\t\t} else if ($target.is('.checkbox-actions .list-check-all')) {\n\t\t\t\tconst $check = this.$result.find('.list-header-subject .list-check-all');\n\t\t\t\t$check.prop('checked', $target.prop('checked'));\n\n\t\t\t\tthis.$result.find('.list-row-checkbox')\n\t\t\t\t\t.prop('checked', $target.prop('checked'));\n\t\t\t}\n\n\t\t\tthis.on_row_checked();\n\t\t});\n\n\t\tthis.$result.on('click', '.list-row-checkbox', e => {\n\t\t\tconst $target = $(e.currentTarget);\n\t\t\te.stopPropagation();\n\n\t\t\t// shift select checkboxes\n\t\t\tif (e.shiftKey && this.$checkbox_cursor && !$target.is(this.$checkbox_cursor)) {\n\t\t\t\tconst name_1 = this.$checkbox_cursor.data().name;\n\t\t\t\tconst name_2 = $target.data().name;\n\t\t\t\tconst index_1 = this.data.findIndex(d => d.name === name_1);\n\t\t\t\tconst index_2 = this.data.findIndex(d => d.name === name_2);\n\t\t\t\tlet [min_index, max_index] = [index_1, index_2];\n\n\t\t\t\tif (min_index > max_index) {\n\t\t\t\t\t[min_index, max_index] = [max_index, min_index];\n\t\t\t\t}\n\n\t\t\t\tlet docnames = this.data.slice(min_index + 1, max_index).map(d => d.name);\n\t\t\t\tconst selector = docnames.map(name => `.list-row-checkbox[data-name=\"${name}\"]`).join(',');\n\t\t\t\tthis.$result.find(selector).prop('checked', true);\n\t\t\t}\n\n\t\t\tthis.$checkbox_cursor = $target;\n\t\t});\n\t}\n\n\tcomment_when(datetime, mini) {\n\t\tvar timestamp = frappe.datetime.str_to_user ?\n\t\t\tfrappe.datetime.str_to_user(datetime) : datetime;\n\t\treturn '<span class=\"frappe-timestamp '\n\t\t\t+ (mini ? \" mini\" : \"\") + '\" data-timestamp=\"' + datetime\n\t\t\t+ '\" title=\"' + timestamp + '\">'\n\t\t\t+ this.prettyDate(datetime, mini) + '</span>';\n\t}\n\n\tconvert_to_user_tz(date) {\n\t\tdate = frappe.datetime.convert_to_user_tz(date);\n\t\treturn new Date((date || \"\").replace(/-/g, \"/\").replace(/[TZ]/g, \" \").replace(/\\.[0-9]*/, \"\"));\n\t}\n\n\tprettyDate(date, mini) {\n\t\tif (!date) return '';\n\n\t\tif (typeof (date) == \"string\") {\n\t\t\tdate = this.convert_to_user_tz(date);\n\t\t}\n\n\t\tlet diff = (((new Date()).getTime() - date.getTime()) / 1000);\n\t\tlet day_diff = Math.floor(diff / 86400);\n\n\t\tif (isNaN(day_diff) || day_diff < 0) return '';\n\n\t\tif (mini) {\n\t\t\t// Return short format of time difference\n\t\t\tif (day_diff == 0) {\n\t\t\t\tif (diff < 60) {\n\t\t\t\t\treturn __(\"now\");\n\t\t\t\t} else if (diff < 3600) {\n\t\t\t\t\treturn __(\"{0} m\", [Math.floor(diff / 60)]);\n\t\t\t\t} else if (diff < 86400) {\n\t\t\t\t\treturn __(\"{0} h\", [Math.floor(diff / 3600)]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (day_diff < 7) {\n\t\t\t\t\treturn __(\"{0} d\", [day_diff]);\n\t\t\t\t} else if (day_diff < 31) {\n\t\t\t\t\treturn __(\"{0} w\", [Math.ceil(day_diff / 7)]);\n\t\t\t\t} else if (day_diff < 365) {\n\t\t\t\t\treturn __(\"{0} M\", [Math.ceil(day_diff / 30)]);\n\t\t\t\t} else {\n\t\t\t\t\treturn __(\"{0} y\", [Math.ceil(day_diff / 365)]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Return long format of time difference\n\t\t\tif (day_diff == 0) {\n\t\t\t\tif (diff < 60) {\n\t\t\t\t\treturn __(\"just now\");\n\t\t\t\t} else if (diff < 120) {\n\t\t\t\t\treturn __(\"1 minute ago\");\n\t\t\t\t} else if (diff < 3600) {\n\t\t\t\t\treturn __(\"{0} minutes ago\", [Math.floor(diff / 60)]);\n\t\t\t\t} else if (diff < 7200) {\n\t\t\t\t\treturn __(\"1 hour ago\");\n\t\t\t\t} else if (diff < 86400) {\n\t\t\t\t\treturn __(\"{0} hours ago\", [Math.floor(diff / 3600)]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (day_diff == 1) {\n\t\t\t\t\treturn __(\"yesterday\");\n\t\t\t\t} else if (day_diff < 7) {\n\t\t\t\t\treturn __(\"{0} days ago\", [day_diff]);\n\t\t\t\t} else if (day_diff < 14) {\n\t\t\t\t\treturn __(\"1 week ago\");\n\t\t\t\t} else if (day_diff < 31) {\n\t\t\t\t\treturn __(\"{0} weeks ago\", [Math.ceil(day_diff / 7)]);\n\t\t\t\t} else if (day_diff < 62) {\n\t\t\t\t\treturn __(\"1 month ago\");\n\t\t\t\t} else if (day_diff < 365) {\n\t\t\t\t\treturn __(\"{0} months ago\", [Math.ceil(day_diff / 30)]);\n\t\t\t\t} else if (day_diff < 730) {\n\t\t\t\t\treturn __(\"1 year ago\");\n\t\t\t\t} else {\n\t\t\t\t\treturn __(\"{0} years ago\", [Math.ceil(day_diff / 365)]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nerpnext.projects.CustomFilterArea = class CustomFilterArea {\n\n\tconstructor(list_view) {\n\t\tthis.list_view = list_view;\n\t\tthis.list_view.page.page_form.append(`<div class=\"standard-filter-section flex\"></div>`);\n\n\t\tconst filter_area = this.list_view.hide_page_form\n\t\t\t? this.list_view.page.custom_actions\n\t\t\t: this.list_view.page.page_form;\n\n\t\tthis.list_view.$filter_section = $('<div class=\"filter-section flex\">').appendTo(\n\t\t\tfilter_area\n\t\t);\n\n\t\tthis.$filter_list_wrapper = this.list_view.$filter_section;\n\t\tthis.trigger_refresh = true;\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tif (!this.list_view.hide_page_form) this.make_standard_filters();\n\t\tthis.make_filter_list();\n\t}\n\n\tget() {\n\t\tlet filters = this.filter_list.get_filters();\n\t\tlet standard_filters = this.get_standard_filters();\n\n\t\treturn filters.concat(standard_filters).uniqBy(JSON.stringify);\n\t}\n\n\tset(filters) {\n\t\t// use to method to set filters without triggering refresh\n\t\tthis.trigger_refresh = false;\n\t\treturn this.add(filters, false).then(() => {\n\t\t\tthis.trigger_refresh = true;\n\t\t\tthis.filter_list.update_filter_button();\n\t\t});\n\t}\n\n\tadd(filters, refresh = true) {\n\t\tif (!filters || (Array.isArray(filters) && filters.length === 0))\n\t\t\treturn Promise.resolve();\n\n\t\tif (typeof filters[0] === \"string\") {\n\t\t\t// passed in the format of doctype, field, condition, value\n\t\t\tconst filter = Array.from(arguments);\n\t\t\tfilters = [filter];\n\t\t}\n\n\t\tfilters = filters.filter((f) => {\n\t\t\treturn !this.exists(f);\n\t\t});\n\n\t\tconst { non_standard_filters, promise } = this.set_standard_filter(\n\t\t\tfilters\n\t\t);\n\n\t\treturn promise\n\t\t\t.then(() => {\n\t\t\t\treturn (\n\t\t\t\t\tnon_standard_filters.length > 0 &&\n\t\t\t\t\tthis.filter_list.add_filters(non_standard_filters)\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\trefresh && this.list_view.refresh();\n\t\t\t});\n\t}\n\n\trefresh_list_view_old() {\n\t\tif (this.trigger_refresh) {\n\t\t\tthis.list_view.start = 0;\n\t\t\tthis.list_view.refresh();\n\t\t\tthis.list_view.on_filter_change();\n\t\t}\n\t}\n\n\texists(f) {\n\t\tlet exists = false;\n\t\t// check in standard filters\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\t\tif (f[2] === \"=\" && f[1] in fields_dict) {\n\t\t\tconst value = fields_dict[f[1]].get_value();\n\t\t\tif (value) {\n\t\t\t\texists = true;\n\t\t\t}\n\t\t}\n\n\t\t// check in filter area\n\t\tif (!exists) {\n\t\t\texists = this.filter_list.filter_exists(f);\n\t\t}\n\n\t\treturn exists;\n\t}\n\n\tset_standard_filter(filters) {\n\t\tif (filters.length === 0) {\n\t\t\treturn {\n\t\t\t\tnon_standard_filters: [],\n\t\t\t\tpromise: Promise.resolve(),\n\t\t\t};\n\t\t}\n\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\n\t\tlet out = filters.reduce((out, filter) => {\n\t\t\t// eslint-disable-next-line\n\t\t\tconst [dt, fieldname, condition, value] = filter;\n\t\t\tout.promise = out.promise || Promise.resolve();\n\t\t\tout.non_standard_filters = out.non_standard_filters || [];\n\n\t\t\tif (\n\t\t\t\tfields_dict[fieldname] &&\n\t\t\t\t(condition === \"=\" || condition === \"like\")\n\t\t\t) {\n\t\t\t\t// standard filter\n\t\t\t\tout.promise = out.promise.then(() =>\n\t\t\t\t\tfields_dict[fieldname].set_value(value)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// filter out non standard filters\n\t\t\t\tout.non_standard_filters.push(filter);\n\t\t\t}\n\t\t\treturn out;\n\t\t}, {});\n\n\t\treturn out;\n\t}\n\n\tremove_filters(filters) {\n\t\tfilters.map(f => {\n\t\t\tthis.remove(f[1]);\n\t\t});\n\t}\n\n\tremove(fieldname) {\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\n\t\tif (fieldname in fields_dict) {\n\t\t\tfields_dict[fieldname].set_value(\"\");\n\t\t}\n\n\t\tlet filter = this.filter_list.get_filter(fieldname);\n\t\tif (filter) filter.remove();\n\t\tthis.filter_list.apply();\n\t\treturn Promise.resolve();\n\t}\n\n\tclear(refresh = true) {\n\t\tif (!refresh) {\n\t\t\tthis.trigger_refresh = false;\n\t\t}\n\n\t\tthis.filter_list.clear_filters();\n\n\t\tconst promises = [];\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\t\tfor (let key in fields_dict) {\n\t\t\tconst field = this.list_view.page.fields_dict[key];\n\t\t\tpromises.push(() => field.set_value(\"\"));\n\t\t}\n\t\treturn frappe.run_serially(promises).then(() => {\n\t\t\tthis.trigger_refresh = true;\n\t\t});\n\t}\n\n\tmake_standard_filters_old() {\n\t\tthis.standard_filters_wrapper = this.list_view.page.page_form.find('.standard-filter-section');\n\t\tlet fields = [\n\t\t\t{\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\tlabel: \"Name\",\n\t\t\t\tcondition: \"like\",\n\t\t\t\tfieldname: \"name\",\n\t\t\t\tonchange: () => this.refresh_list_view(),\n\t\t\t},\n\t\t];\n\n\t\tif (this.list_view.custom_filter_configs) {\n\t\t\tthis.list_view.custom_filter_configs.forEach((config) => {\n\t\t\t\tconfig.onchange = () => this.refresh_list_view();\n\t\t\t});\n\n\t\t\tfields = fields.concat(this.list_view.custom_filter_configs);\n\t\t}\n\n\t\tconst doctype_fields = this.list_view.meta.fields;\n\t\tconst title_field = this.list_view.meta.title_field;\n\n\t\tfields = fields.concat(\n\t\t\tdoctype_fields\n\t\t\t\t.filter(\n\t\t\t\t\t(df) =>\n\t\t\t\t\t\tdf.fieldname === title_field ||\n\t\t\t\t\t\t(df.in_standard_filter &&\n\t\t\t\t\t\t\tfrappe.model.is_value_type(df.fieldtype))\n\t\t\t\t)\n\t\t\t\t.map((df) => {\n\t\t\t\t\tlet options = df.options;\n\t\t\t\t\tlet condition = \"=\";\n\t\t\t\t\tlet fieldtype = df.fieldtype;\n\t\t\t\t\tif (\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"Text\",\n\t\t\t\t\t\t\t\"Small Text\",\n\t\t\t\t\t\t\t\"Text Editor\",\n\t\t\t\t\t\t\t\"HTML Editor\",\n\t\t\t\t\t\t\t\"Data\",\n\t\t\t\t\t\t\t\"Code\",\n\t\t\t\t\t\t\t\"Read Only\",\n\t\t\t\t\t\t].includes(fieldtype)\n\t\t\t\t\t) {\n\t\t\t\t\t\tfieldtype = \"Data\";\n\t\t\t\t\t\tcondition = \"like\";\n\t\t\t\t\t}\n\t\t\t\t\tif (df.fieldtype == \"Select\" && df.options) {\n\t\t\t\t\t\toptions = df.options.split(\"\\n\");\n\t\t\t\t\t\tif (options.length > 0 && options[0] != \"\") {\n\t\t\t\t\t\t\toptions.unshift(\"\");\n\t\t\t\t\t\t\toptions = options.join(\"\\n\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlet default_value =\n\t\t\t\t\t\tfieldtype === \"Link\"\n\t\t\t\t\t\t\t? frappe.defaults.get_user_default(options)\n\t\t\t\t\t\t\t: null;\n\t\t\t\t\tif ([\"__default\", \"__global\"].includes(default_value)) {\n\t\t\t\t\t\tdefault_value = null;\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfieldtype: fieldtype,\n\t\t\t\t\t\tlabel: __(df.label),\n\t\t\t\t\t\toptions: options,\n\t\t\t\t\t\tfieldname: df.fieldname,\n\t\t\t\t\t\tcondition: condition,\n\t\t\t\t\t\tdefault: default_value,\n\t\t\t\t\t\tonchange: () => this.refresh_list_view(),\n\t\t\t\t\t\tignore_link_validation: fieldtype === \"Dynamic Link\",\n\t\t\t\t\t\tis_filter: 1,\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t);\n\n\t\tfields.map(df => {\n\t\t\tthis.list_view.page.add_field(df, this.standard_filters_wrapper);\n\t\t});\n\t}\n\n\tget_standard_filters() {\n\t\tconst filters = [];\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\t\tfor (let key in fields_dict) {\n\t\t\tlet field = fields_dict[key];\n\t\t\tlet value = field.get_value();\n\t\t\tif (value) {\n\t\t\t\tif (field.df.condition === \"like\" && !value.includes(\"%\")) {\n\t\t\t\t\tvalue = \"%\" + value + \"%\";\n\t\t\t\t}\n\t\t\t\tfilters.push([\n\t\t\t\t\tthis.list_view.doctype,\n\t\t\t\t\tfield.df.fieldname,\n\t\t\t\t\tfield.df.condition || \"=\",\n\t\t\t\t\tvalue,\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\n\t\treturn filters;\n\t}\n\n\tmake_filter_list_old() {\n\t\t$(`<div class=\"filter-selector\">\n\t\t\t<button class=\"btn btn-default btn-sm filter-button\">\n\t\t\t\t<span class=\"filter-icon\">\n\t\t\t\t\t${frappe.utils.icon('filter')}\n\t\t\t\t</span>\n\t\t\t\t<span class=\"button-label hidden-xs\">\n\t\t\t\t\t${__(\"Filter\")}\n\t\t\t\t<span>\n\t\t\t</button>\n\t\t</div>`\n\t\t).appendTo(this.$filter_list_wrapper);\n\n\t\tthis.filter_button = this.$filter_list_wrapper.find('.filter-button');\n\t\tthis.filter_list = new frappe.ui.FilterGroup({\n\t\t\tbase_list: this.list_view,\n\t\t\tparent: this.$filter_list_wrapper,\n\t\t\tdoctype: this.list_view.doctype,\n\t\t\tfilter_button: this.filter_button,\n\t\t\tdefault_filters: [],\n\t\t\ton_change: () => this.refresh_list_view(),\n\t\t});\n\t}\n\n\tis_being_edited() {\n\t\t// returns true if user is currently editing filters\n\t\treturn (\n\t\t\tthis.filter_list &&\n\t\t\tthis.filter_list.wrapper &&\n\t\t\tthis.filter_list.wrapper.find(\".filter-box:visible\").length > 0\n\t\t);\n\t}\n\n\trefresh_filters(meta) {\n\t\tthis.list_view.page.clear_fields();\n\t\tthis.list_view.current_doctype = meta.name;\n\t\t// this.$filter_list_wrapper.remove();\n\n\t\tlet existing_list = $(this.list_view.parent).find(\".filter-section\");\n\n\t\tif (existing_list) {\n\t\t\texisting_list.remove();\n\t\t}\n\n\t\tthis.list_view.doctype = meta.name;\n\t\tthis.make_standard_filters(meta);\n\n\t\tconst filter_area = this.list_view.hide_page_form\n\t\t\t? this.list_view.page.custom_actions\n\t\t\t: this.list_view.page.page_form;\n\t\tthis.$filter_list_wrapper = $('<div class=\"filter-section flex\">').appendTo(filter_area);\n\t\tthis.make_filter_list(meta.name);\n\t\tthis.clear(false);\n\t}\n\n\tmake_standard_filters(meta) {\n\t\tif (!meta) {\n\t\t\tmeta = this.list_view.meta;\n\t\t}\n\n\t\tlet fields = [\n\t\t\t{\n\t\t\t\tfieldtype: 'Data',\n\t\t\t\tlabel: 'Name',\n\t\t\t\tcondition: 'like',\n\t\t\t\tfieldname: 'name',\n\t\t\t\tonchange: () => this.refresh_list_view()\n\t\t\t}\n\t\t];\n\n\t\tconst doctype_fields = meta.fields;\n\t\tconst title_field = meta.title_field;\n\n\t\tfields = fields.concat(doctype_fields.filter(\n\t\t\tdf => (df.fieldname === title_field) || (df.in_standard_filter && frappe.model.is_value_type(df.fieldtype))\n\t\t).map(df => {\n\t\t\tlet options = df.options;\n\t\t\tlet condition = '=';\n\t\t\tlet fieldtype = df.fieldtype;\n\t\t\tif (['Text', 'Small Text', 'Text Editor', 'HTML Editor', 'Data', 'Code', 'Read Only'].includes(fieldtype)) {\n\t\t\t\tfieldtype = 'Data';\n\t\t\t\tcondition = 'like';\n\t\t\t}\n\t\t\tif (df.fieldtype == \"Select\" && df.options) {\n\t\t\t\toptions = df.options.split(\"\\n\");\n\t\t\t\tif (options.length > 0 && options[0] != \"\") {\n\t\t\t\t\toptions.unshift(\"\");\n\t\t\t\t\toptions = options.join(\"\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet default_value = (fieldtype === 'Link') ? frappe.defaults.get_user_default(options) : null;\n\t\t\tif (['__default', '__global'].includes(default_value)) {\n\t\t\t\tdefault_value = null;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tfieldtype: fieldtype,\n\t\t\t\tlabel: __(df.label),\n\t\t\t\toptions: options,\n\t\t\t\tfieldname: df.fieldname,\n\t\t\t\tcondition: condition,\n\t\t\t\tdefault: default_value,\n\t\t\t\tonchange: () => this.refresh_list_view(),\n\t\t\t\tignore_link_validation: fieldtype === 'Dynamic Link',\n\t\t\t\tis_filter: 1,\n\t\t\t};\n\t\t}));\n\n\t\tthis.standard_filters_wrapper = this.list_view.page.page_form.find('.standard-filter-section');\n\t\tif (this.standard_filters_wrapper.length == 0) {\n\t\t\tthis.list_view.page.page_form.append(`<div class=\"standard-filter-section flex\"></div>`);\n\t\t\tthis.standard_filters_wrapper = this.list_view.page.page_form.find('.standard-filter-section');\n\t\t}\n\t\tfields.map(df => {\n\t\t\tthis.list_view.page.add_field(df, this.standard_filters_wrapper);\n\t\t});\n\t}\n\n\tmake_filter_list(doctype) {\n\t\tif (!doctype) {\n\t\t\tdoctype = this.list_view.doctype;\n\t\t}\n\n\t\t$(`<div class=\"filter-selector\">\n\t\t\t<button class=\"btn btn-default btn-sm filter-button\">\n\t\t\t\t<span class=\"filter-icon\">\n\t\t\t\t\t${frappe.utils.icon('filter')}\n\t\t\t\t</span>\n\t\t\t\t<span class=\"button-label hidden-xs\">\n\t\t\t\t\t${__(\"Filter\")}\n\t\t\t\t<span>\n\t\t\t</button>\n\t\t</div>`\n\t\t).appendTo(this.$filter_list_wrapper);\n\t\t\n\t\tthis.filter_button = this.$filter_list_wrapper.find('.filter-button');\n\t\tthis.filter_list = new frappe.ui.FilterGroup({\n\t\t\tbase_list: this.list_view,\n\t\t\tparent: this.$filter_list_wrapper,\n\t\t\tdoctype: doctype,\n\t\t\tdefault_filters: [],\n\t\t\tfilter_button: this.filter_button,\n\t\t\ton_change: () => this.refresh_list_view()\n\t\t});\n\t}\n\n\trefresh_list_view() {\n\t\tif (this.trigger_refresh) {\n\t\t\tif (this.list_view.doctype == \"Task\") {\n\t\t\t\tthis.list_view.fetch_tasks();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.list_view.start = 0;\n\t\t\tthis.list_view.refresh();\n\t\t\tthis.list_view.on_filter_change();\n\t\t}\n\t}\n};"],"names":["forEach","doctype","frappe","ui","form","on","cost_center","frm","call","method","args","filters","business_segment","doc","fields","parent","limit_page_length","callback","r","set_query","let","region_list","message","name","map","pt","provide","erpnext","projects","ProjectTree","views","BaseList","[object Object]","opts","super","this","show","window","cur_list","hide_sort_selector","view_name","setup_defaults","task_meta","get_meta","task_fields","task_columns","get_settings","menu_items","$page","$","page","page_form","removeClass","addClass","body","setup_page_head","set_title","set_menu_items","set_breadcrumbs","model","can_delete","push","label","__","action","const","docnames","get_checked_items","docname","toString","confirm","length","freeze","items","then","failed","_server_messages","throw","f","bold","join","utils","play_sound","refresh","standard","item","$item","add_menu_item","shortcut","class","title","columns","setup_columns","meta","project_listview_settings","task_listview_settings","render_header","render_skeleton","setup_events","setup_fields","set_task_fields","build_task_fields","concat","std_fields_list","get_fields_in_list_view","title_field","image_field","settings","add_fields","track_seen","sort_by","_add_task_field","df","get_docfield","fieldtype","options","includes","_add_field","filter","Boolean","uniqBy","fieldname","has_field","list_view_settings","type","get_df","has_indicator","fields_in_list_view","in_list_view","reorder_listview_fields","total_fields","innerWidth","parseInt","slice","fields_order","fld","JSON","parse","splice","col","field","column","is_value_type","perm","has_perm","permlevel","$row","get_list_row_html_skeleton","$result","append","get_full_column_name","params","get_fields","get_filters_for_args","with_comment_count","page_length","start","get_task_fields","attr","async","get_tasks","setup_check_events","setup_open_doc","setup_task_tree_dropdown","setup_create_new_task","get_projects","setup_expand_all_rows","setup_collapse_all_rows","e","el","currentTarget","$el","find","target","unescape","getAttribute","render_task","task","expand_all","list","$list","level","toggleClass","classList","contains","remove","get_task_call_args","prepare_data","data","i","_idx","get_task_list_row_html","click","stopPropagation","set_route","project","get_new_doc","make_quick_entry","$frappe_list","filter_area","clear","remove_previous_button","refresh_filters","fetch_projects","get_call_args","toggle_result_area","render","fetch_tasks","add","render_previous_button","task_list","toggle_expand_collapse_button","task_name","hide","is_task","get_list_row_html","$no_result","get_no_result_message","$no_result_prev","get_previous_header_html","toggle","$paging_area","show_more","CustomFilterArea","set","get_left_html","get_right_html","get_task_list_row_html_skeleton","left","right","escape","get_column_html","create_new","get_meta_html","get_indicator_html","value","Subject","Field","is_numeric_field","get_subject_html","html","_value","formatters","fetch_from","strip_html","escape_html","guess_colour","Math","round","format","field_html","user","session","subject","escaped_subject","seen","_seen","subject_link","get_subject_link","expandable","get_like_html","liked_by","_liked_by","encodeURI","u","user_info","fullname","icon","indicator","get_indicator","last_assignee","avatar","is_group","get_add_child_button","get_open_button","modified","comment_when","_assign","get_avatar","_comment_count","get_indicator_dot","refresh_header","prepend","get_header_html","subject_field","subject_html","$columns","get_header_html_skeleton","$list_head_subject","$checkbox_actions","$checks","prop","only_docnames","Array","from","check","cstr","d","$target","is","$check","trigger","on_row_checked","shiftKey","$checkbox_cursor","name_1","name_2","findIndex","min_index","max_index","selector","datetime","mini","str_to_user","prettyDate","date","convert_to_user_tz","Date","replace","diff","getTime","day_diff","floor","isNaN","ceil","list_view","hide_page_form","custom_actions","$filter_section","appendTo","$filter_list_wrapper","trigger_refresh","setup","make_standard_filters","make_filter_list","filter_list","get_filters","standard_filters","get_standard_filters","stringify","update_filter_button","isArray","Promise","resolve","arguments","exists","set_standard_filter","non_standard_filters","add_filters","on_filter_change","fields_dict","get_value","filter_exists","promise","reduce","out","condition","set_value","get_filter","apply","clear_filters","promises","key","run_serially","standard_filters_wrapper","onchange","refresh_list_view","custom_filter_configs","config","doctype_fields","in_standard_filter","split","unshift","default_value","defaults","get_user_default","default","ignore_link_validation","is_filter","add_field","filter_button","FilterGroup","base_list","default_filters","on_change","wrapper","clear_fields","current_doctype","existing_list"],"mappings":"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"}